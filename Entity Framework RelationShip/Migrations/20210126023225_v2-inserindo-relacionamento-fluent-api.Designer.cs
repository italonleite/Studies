// <auto-generated />
using System;
using Entity_Framework_RelationShip.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entity_Framework_RelationShip.Migrations
{
    [DbContext(typeof(ImmobileDbContext))]
    [Migration("20210126023225_v2-inserindo-relacionamento-fluent-api")]
    partial class v2inserindorelacionamentofluentapi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Entity_Framework_RelationShip.Models.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("varchar(9)");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Entity_Framework_RelationShip.Models.Immobile", b =>
                {
                    b.Property<Guid>("ImmobileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EType")
                        .HasColumnType("int");

                    b.HasKey("ImmobileId");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.ToTable("Imobiles");
                });

            modelBuilder.Entity("Entity_Framework_RelationShip.Models.Immobile", b =>
                {
                    b.HasOne("Entity_Framework_RelationShip.Models.Address", "Address")
                        .WithOne()
                        .HasForeignKey("Entity_Framework_RelationShip.Models.Immobile", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
